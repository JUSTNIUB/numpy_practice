import numpy as np

print('=================================')
print('numpy的切片')
print('=================================')
x = np.array([1,2,3,4])

print(x[1:3])
print(x[:3])
print(x[1:])
print(x[:])
print(x[0:4:2])
# y = x[1:3] #numpy的切片只是一个映射，并没有创建一个新的对象，python中创建了
# print(x)
# print(y)
# y[0] = 1
# print(x)
# print(y)
# a = [1,2,3,4]
# b = a[1:3]
# b[0]=1
# print('new',a,b)
print('高级切片')
x = np.array([[1,2],[3,4],[5,6]])
print(x[:2])
print('带逗号的切片',x[:2,:1])#从两个维度切片了，可以认为是进行了两次操作
x[:2,:1] = [[8],[9]]
print(x)
print('=================================')
print('布尔索引')
print('=================================')
x = np.array([3,2,3,1,3,0])
y = np.array([True,False,True,True,False,False])
print(x[y])
#这里很有意思，用列表类型和数字类型作比较，是否这里也存在广播的概念呢？
#还是说是单纯的列表推导式+迭代器的使用
print(x[y==False])
print(x[x>2])
#至少列表不支持这样操作
# a = [1,2,3,4,5]
# print(a>2)

print('=================================')
print('数组索引')
print('=================================')
x = np.array([1,2,3,4,5,6])
print(x[[0,1,2]])
print(x[[-1,-2,-3]])

#这里从数组角度去理解，会好点，不要从维度的角度去理解
x = np.array([[1,2],[3,4],[5,6]])
print('-------------')
print(x[[0,1]])
print(x[[0,2],[0,1]])
print(x[[0,1]][:1,1])
x = np.array([[[1,2,3],[4,5,6],[10,11,333]],[[6,7,8],[9,10,11],[222,333,444]],[[1,1,1],[2,2,2],[555,666,777]]])
print(x.shape)
# print(x[:,[0],[0,1]])
print(x[[[2,0],[0,1]],[[0,0],[1,1]]])
print(x[[2,0,0,1],[0,0,1,1]])
print(x[[2,0],[0,1]])